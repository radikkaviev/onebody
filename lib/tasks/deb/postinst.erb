#!/bin/bash

if [[ ! -e /var/lib/onebody ]]; then
  mkdir -p /var/lib/onebody
  mkdir /var/lib/onebody/photos
  mkdir /var/lib/onebody/publications
  mkdir /var/lib/onebody/attachments
  mkdir /var/lib/onebody/themes
fi

rsync -a /usr/lib/onebody/themes/* /var/lib/onebody/themes/ || exit

if [[ ! -e /var/log/onebody ]]; then
  mkdir /var/log/onebody
fi

if [[ ! -e /var/cache/onebody ]]; then
  mkdir /var/cache/onebody
fi

if [[ ! -e /var/lib/onebody/tmp ]]; then
  mkdir /var/lib/onebody/tmp || exit
  ln -sf /var/lib/onebody/tmp /usr/lib/onebody/tmp || exit
fi

if [[ ! -e /etc/onebody ]]; then
  mkdir /etc/onebody
fi

if [[ `which gem` = "" ]] || [[ `gem -v` < "1.3.5" ]]; then
  echo "Installing/Upgrading RubyGems..."
  cd /tmp
  wget -nv http://rubyforge.org/frs/download.php/60718/rubygems-1.3.5.tgz || exit
  tar xzf rubygems-1.3.5.tgz || exit
  rm rubygems-1.3.5.tgz
  cd /tmp/rubygems-1.3.5
  ruby setup.rb || exit
  cd /tmp
  rm -rf /tmp/rubygems-1.3.5
  echo "Symlinking /usr/bin/gem1.8 at /usr/bin/gem..."
  ln -sf /usr/bin/gem1.8 /usr/bin/gem
fi

echo "Installing required gems..."
for gem in rdoc rack highline builder sqlite3-ruby chronic; do
  if [[ `gem list $gem | grep $gem` = "" ]]; then gem install $gem || exit; fi
done
if [[ `gem list javan-whenever | grep javan-whenever` = "" ]]; then gem install javan-whenever -s http://gems.github.com || exit; fi

if [[ `which irb` = "" ]]; then
  echo "Symlinking /usr/bin/irb1.8 at /usr/bin/irb..."
  ln -sf /usr/bin/irb1.8 /usr/bin/irb || exit
fi

echo "Building native extensions for unpacked gems..."
cd /usr/lib/onebody
rake gems:build || exit

id onebody >/dev/null
if [[ $? -eq 0 ]]; then
  chown -R onebody:onebody /usr/lib/onebody
  chown -R onebody:onebody /var/lib/onebody
  chown -R onebody:onebody /var/log/onebody
  chown -R onebody:onebody /var/cache/onebody
fi

if [[ -e "/etc/onebody/database.yml" ]]; then
  echo
  host=`ruby -ryaml -e "print YAML::load(File.read('/etc/onebody/database.yml'))['production']['host']"`
  if [[ $host = "localhost" ]] || [[ $host = "nil" ]]; then
    echo "Backing up your database before migration..."
    username=`ruby -ryaml -e "print YAML::load(File.read('/etc/onebody/database.yml'))['production']['username']"`
    password=`ruby -ryaml -e "print YAML::load(File.read('/etc/onebody/database.yml'))['production']['password']"`
    database=`ruby -ryaml -e "print YAML::load(File.read('/etc/onebody/database.yml'))['production']['database']"`
    backup_path="/var/lib/onebody/database_backup_`date +%Y-%m-%d-%H%M%S`.sql"
    mysqldump --single-transaction -u$username -p$password $database > $backup_path
    echo "A backup of your database was saved to:"
    echo $backup_path
    echo "Now migrating your database..."
    cd /usr/lib/onebody &&
    sudo -u onebody rake db:migrate RAILS_ENV=production || exit
    touch /var/lib/onebody/tmp/restart.txt
    echo
    echo "============================================================================="
    echo "    OneBody files have been upgraded and the database has been migrated.     "
    echo "============================================================================="
  else
    echo "============================================================================="
    echo "                      OneBody files have been upgraded.                      "
    echo "     You must run migrations on your database. Be sure to BACK UP first.     "
    echo "                                  Then run:                                  "
    echo " cd /usr/lib/onebody && sudo -u onebody rake db:migrate RAILS_ENV=production "
    echo "============================================================================="
  fi
else
  echo
  echo "============================================================================="
  echo " OneBody files are installed. Now run the following command to finish setup: "
  echo "                         sudo /usr/bin/setup-onebody                         "
  echo "============================================================================="
fi
