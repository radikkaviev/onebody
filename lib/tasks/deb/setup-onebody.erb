#!/bin/bash

function die {
  status=$?
  echo
  echo "There was an error. Setup did not complete."
  exit $status
}

if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root." 1>&2
   exit 1
fi

echo "This will setup the necessary components for running OneBody, including:"
echo " * create a user called 'onebody'"
echo " * configure a catchall email address in Postfix and a POP account"
echo " * create a database called 'onebody'"
echo " * add scheduled tasks to the cron for user 'onebody'"
echo " * install Phusion Passenger from source and add the module to Apache"
echo
echo "You will be asked at each step to confirm."
echo
echo "Let's get started..."

echo
read -p "Create a user 'onebody'? [y] " answer
if [[ "$answer" = "" ]] || [[ "$answer" =~ y|yes|Y|YES ]]; then
  echo "Creating user 'onebody'..."
  onebodypass=`makepasswd --chars=15` &&
  useradd --create-home -s /usr/sbin/nologin -p$onebodypass onebody &&
  chown -R onebody:onebody /usr/lib/onebody &&
  chown -R onebody:onebody /var/log/onebody &&
  chown -R onebody:onebody /var/lib/onebody &&
  chown -R onebody:onebody /var/cache/onebody || die
fi

echo
read -p "Create a catchall address in Postfix? [y] " answer
if [[ "$answer" = "" ]] || [[ "$answer" =~ y|yes|Y|YES ]]; then
  echo "Configuring email..."
  mkdir -p /home/onebody/Maildir &&
  chown onebody:onebody /home/onebody/Maildir || die
  if [[ `grep -c "# config added by OneBody" /etc/postfix/main.cf` -gt 0 ]]; then
    echo
    echo "WARNING: Configuration for OneBody already exists inside /etc/postfix/main.cf"
    echo "You should examine the config to ensure it contains the following:"
    echo "  home_mailbox = Maildir/"
    echo "  luser_relay = onebody"
    echo "  local_recipient_maps ="
  else
    echo -e "\n\n# config added by OneBody\nhome_mailbox = Maildir/\nluser_relay = onebody\nlocal_recipient_maps =\n# end config added by OneBody\n" >> /etc/postfix/main.cf || die
  fi
  postfix reload &&
  echo -e "production:\n  pop:\n    host: localhost\n    username: onebody\n    password: $onebodypass\n  smtp:\n    address: localhost\n    domain: example.com" > /etc/onebody/email.yml || die
  echo
  echo "In order for Postfix to accept email for your domain, you will also"
  echo "need to adjust the following in your /etc/postfix/main.cf file:"
  echo "  mydestination = mydomain.com"
  echo
fi

echo
read -p "Create the 'onebody' database? [y] " answer
if [[ "$answer" = "" ]] || [[ "$answer" =~ y|yes|Y|YES ]]; then
  echo "Configuring the database..."
  while true; do
    echo "Enter the root password for your MySQL server instance below."
    echo "This will be used to create a new database called 'onebody' and a new MySQL user called 'onebody'."
    read -p "MySQL 'root' Password [none]: " rootpass
    userpass=`makepasswd --chars=15` &&
    echo -e "production:\n  adapter: mysql\n  database: onebody\n  username: onebody\n  password: $userpass\n  host: localhost" > /etc/onebody/database.yml || die
    if [ "$rootpass" != "" ]; then
      rootpass="-p$rootpass"
    fi
    mysql -uroot $rootpass -e "create database onebody; grant all on onebody.* to onebody@localhost identified by '$userpass';"
    if [ "$?" = 0 ]; then break; fi
  done
  cd /usr/lib/onebody
  sudo -u onebody rake db:migrate RAILS_ENV=production || die
fi

echo
read -p "Configure scheduled tasks in cron? [y] " answer
if [[ "$answer" = "" ]] || [[ "$answer" =~ y|yes|Y|YES ]]; then
  echo "Configuring cron..."
  cd /usr/lib/onebody
  sudo -u onebody whenever -w RAILS_ENV=production || die
fi

echo
read -p "Install Passenger and setup Apache (requires Apache restart)? [y] " answer
if [[ "$answer" = "" ]] || [[ "$answer" =~ y|yes|Y|YES ]]; then
  echo "Installing Phusion Passenger and configuring Apache..."
  gem install passenger --no-rdoc --no-ri || die
  version=`gem list --local | grep passenger | ruby -e "print STDIN.read.match(/\\((.+)\\)/)[1]"` || die
  passenger_path="/usr/lib/ruby/gems/1.8/gems/passenger-$version"
  cd $passenger_path
  rake clean apache2 &&
  echo "LoadModule passenger_module $passenger_path/ext/apache2/mod_passenger.so" > /etc/apache2/mods-available/passenger.load &&
  echo -e "<IfModule passenger_module>\n  PassengerRoot $passenger_path\n  PassengerRuby /usr/bin/ruby\n</IfModule>" > /etc/apache2/mods-available/passenger.conf &&
  a2enmod rewrite &&
  a2enmod passenger &&
  invoke-rc.d apache2 force-reload || die
  echo
  echo "You're almost done! To finish up, Apache just needs to be configured."
  echo "Do you want me to change the DocumentRoot of your default virtual host?"
  echo "This is the easiest way, but should NOT be chosen if you host other websites"
  echo "on this server."
  echo
  read -p "Change the default site's DocumentRoot? [n] " answer
  if [[ "$answer" =~ y|yes|Y|YES ]]; then
    sed -i -r -e 's/DocumentRoot .+$/DocumentRoot \/usr\/lib\/onebody\/public/' /etc/apache2/sites-available/default || die
    invoke-rc.d apache2 reload || die
    echo
    echo "Your site should now be running!"
  else
    echo
    echo "Create a new virtual host with your DocumentRoot pointing at:"
    echo "  /usr/lib/onebody/public"
    echo
    echo "Example:"
    echo
    echo "<VirtualHost *>"
    echo "  ServerName www.myonebodysite.com"
    echo "  DocumentRoot /usr/lib/onebody/public"
    echo "</VirtualHost>"
    echo
    echo "Enable your site, restart Apache, and you should be done!"
  fi

fi

echo
read -p "Create initial admin user? [y] " answer
if [[ "$answer" = "" ]] || [[ "$answer" =~ y|yes|Y|YES ]]; then
  cd /usr/lib/onebody
  while true; do
    sudo -u onebody rake onebody:new_user RAILS_ENV=production
    if [ "$?" = 0 ]; then break; fi
    echo
    echo "There was an error. Please try again."
  done
fi

echo
echo "Setup is complete."
