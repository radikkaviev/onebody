#!/bin/bash

function die {
  status=$?
  echo
  echo "There was an error. Setup did not complete."
  exit $status
}

if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root." 1>&2
   exit 1
fi

if [[ $1 = "-f" ]]; then
  force=true
else
  force=false
fi

echo "This will setup the necessary components for running OneBody, including:"
echo " * create a user called 'onebody'"
echo " * configure a catchall email address in Postfix and a POP account"
echo " * create a database called 'onebody'"
echo " * add scheduled tasks to the cron for user 'onebody'"
echo " * install Phusion Passenger from source and add the module to Apache"
echo
echo "You will be asked at each step to confirm."
echo
echo "Let's get started..."

id onebody >/dev/null
if [[ $? -eq 1 ]] || [[ $force = true ]]; then
  echo
  read -p "Create a user 'onebody'? [y] " answer
  if [[ "$answer" = "" ]] || [[ "$answer" =~ y|yes|Y|YES ]]; then
    echo "Creating user 'onebody'..."
    onebodypass=`makepasswd --chars=15` &&
    useradd --create-home -s /usr/sbin/nologin -p$onebodypass onebody &&
    chown -R onebody:onebody /usr/lib/onebody &&
    chown -R onebody:onebody /var/log/onebody &&
    chown -R onebody:onebody /var/lib/onebody &&
    chown -R onebody:onebody /var/cache/onebody || die
    echo "Configuring user cron..."
    cd /usr/lib/onebody
    sudo -u onebody whenever -w RAILS_ENV=production || die
  fi
else
  echo "User 'onebody' seems to already be created. Pass -f to force re-setup."
fi

if [[ `grep -c "# config added by OneBody" /etc/postfix/main.cf` -eq 0 ]] || [[ $force = true ]]; then
  echo
  read -p "Create a catchall address in Postfix? [y] " answer
  if [[ "$answer" = "" ]] || [[ "$answer" =~ y|yes|Y|YES ]]; then
    echo "Configuring email..."
    mkdir -p /home/onebody/Maildir &&
    chown onebody:onebody /home/onebody/Maildir || die
    echo -e "\n\n# config added by OneBody\nhome_mailbox = Maildir/\nluser_relay = onebody\nlocal_recipient_maps =\n# end config added by OneBody\n" >> /etc/postfix/main.cf || die
    postfix reload &&
    echo -e "production:\n  pop:\n    host: localhost\n    username: onebody\n    password: $onebodypass\n  smtp:\n    address: localhost\n    domain: example.com" > /etc/onebody/email.yml || die
    echo
    echo "In order for Postfix to accept email for your domain, you will also"
    echo "need to adjust the following in your /etc/postfix/main.cf file:"
    echo "  mydestination = mydomain.com"
    echo
  fi
else
  echo "Postfix seems to already be configuired. Pass -f to force re-setup."
fi

if [[ ! -e "/etc/onebody/database.yml" ]] || [[ $force = true ]]; then
  echo
  read -p "Create the 'onebody' database? [y] " answer
  if [[ "$answer" = "" ]] || [[ "$answer" =~ y|yes|Y|YES ]]; then
    echo "Configuring the database..."
    while true; do
      echo "Enter the root password for your MySQL server instance below."
      echo "This will be used to create a new database called 'onebody' and a new MySQL user called 'onebody'."
      read -p "MySQL 'root' Password [none]: " rootpass
      userpass=`makepasswd --chars=15` &&
      if [ "$rootpass" != "" ]; then
        rootpass="-p$rootpass"
      fi
      mysql -uroot $rootpass -e "create database onebody; grant all on onebody.* to onebody@localhost identified by '$userpass';"
      if [ "$?" = 0 ]; then
        echo -e "production:\n  adapter: mysql\n  database: onebody\n  username: onebody\n  password: $userpass\n  host: localhost" > /etc/onebody/database.yml || die
        break
      fi
    done
    cd /usr/lib/onebody
    sudo -u onebody rake db:migrate RAILS_ENV=production || die
  fi
else
  echo "Database seems to already be configuired. Pass -f to force re-setup."
fi

if [[ ! -e "/var/lib/onebody/admin_user_created" ]] || [[ $force = true ]]; then
  echo
  read -p "Create initial admin user? [y] " answer
  if [[ "$answer" = "" ]] || [[ "$answer" =~ y|yes|Y|YES ]]; then
    cd /usr/lib/onebody
    while true; do
      sudo -u onebody rake onebody:new_user RAILS_ENV=production
      if [ "$?" = 0 ]; then break; fi
      echo
      echo "There was an error. Please try again."
    done
    touch /var/lib/onebody/admin_user_created
  fi
else
  echo "Admin user seems to already be created. Pass -f to force re-setup."
fi

if [[ `gem list | grep passenger` = "" ]] || [[ $force = true ]]; then
  echo
  read -p "Install Passenger and setup Apache (requires Apache restart)? [y] " answer
  if [[ "$answer" = "" ]] || [[ "$answer" =~ y|yes|Y|YES ]]; then
    echo "Installing Phusion Passenger and configuring Apache..."
    gem install passenger --no-rdoc --no-ri || die
    version=`gem list --local | grep passenger | ruby -e "print STDIN.read.match(/\\((.+)\\)/)[1]"` || die
    passenger_path="/usr/lib/ruby/gems/1.8/gems/passenger-$version"
    cd $passenger_path
    rake clean apache2 &&
    echo "LoadModule passenger_module $passenger_path/ext/apache2/mod_passenger.so" > /etc/apache2/mods-available/passenger.load &&
    echo -e "<IfModule passenger_module>\n  PassengerRoot $passenger_path\n  PassengerRuby /usr/bin/ruby\n</IfModule>" > /etc/apache2/mods-available/passenger.conf &&
    a2enmod rewrite &&
    a2enmod passenger &&
    invoke-rc.d apache2 force-reload || die
    echo
    echo "You're almost done! To finish up, Apache just needs to be configured."
    echo "Should this script to change the DocumentRoot of your default virtual host?"
    echo "This is the easiest way, but should NOT be chosen if you host other websites"
    echo "on this server."
    while true; do
      echo
      echo "1. Yes, change the default site's DocumentRoot automatically."
      echo "2. No, I will create my own virtual host."
      echo
      read -p "Your choice: " answer
      if [[ "$answer" = "1" ]]; then
        sed -i -r -e 's/DocumentRoot .+$/DocumentRoot \/usr\/lib\/onebody\/public/' /etc/apache2/sites-available/default || die
        invoke-rc.d apache2 reload || die
        echo
        echo "Your site should now be running!"
        break
      elif [[ "$answer" = "2" ]]; then
        echo
        echo "Create a new virtual host with your DocumentRoot pointing at:"
        echo "  /usr/lib/onebody/public"
        echo
        echo "Example:"
        echo
        echo "<VirtualHost *>"
        echo "  ServerName www.myonebodysite.com"
        echo "  DocumentRoot /usr/lib/onebody/public"
        echo "</VirtualHost>"
        echo
        echo "Enable your site, restart Apache, and you should be done!"
        break
      fi
      echo "You must select either option 1 or 2."
    done
  fi
else
  echo "Passenger/Apache seems to already be configuired. Pass -f to force re-setup."
fi

echo
echo "This setup script is complete."
