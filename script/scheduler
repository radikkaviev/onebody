#!/usr/bin/env ruby

RAILS_ROOT = File.join(File.dirname(__FILE__), '..')
require File.join(RAILS_ROOT, 'vendor/daemon')

require 'time'

class Scheduler < Daemon::Base
  TASKS_DIR = File.join(RAILS_ROOT, 'db/tasks')
  MINUTE = 60
  HOUR = 60 * MINUTE
  DAY = 24 * HOUR
  NIGHT_HOURS = 0..3
  
  def self.start
    @rails_root = File.expand_path(RAILS_ROOT)
    @rails_env = ARGV[1] || 'production'
    loop do
      self.run
      sleep MINUTE
    end
  end
  
  def self.run
    now = Time.now
    self.run_tasks_and_delete('now')
    self.run_tasks('minutely')
    self.run_tasks('hourly') if @last_run.nil? or now >= @last_run + HOUR
    self.run_tasks('nightly') if NIGHT_HOUR.include?(now.hour) and (@last_run.nil? or now >= @last_run + DAY)
    @last_run = now
  end
  
  def self.run_task(file)
    File.read(file).split(/\r?\n/).each do |line|
      if line.strip.any? and line.strip !~ /^#/
        `#{line.gsub(/RAILS_ROOT/, @rails_root).gsub(/RAILS_ENV/, @rails_env)}`
      end
    end
  end
  
  def self.run_tasks(directory)
    Dir[File.join(TASKS_DIR, directory, '*')].each { |f| run_task(f) }
  end
  
  def self.run_tasks_and_delete(directory)
    run_tasks(directory).each { |f| File.delete f }
  end
  
  def self.stop
    # nothing yet
  end
end

Scheduler.daemonize(RAILS_ROOT)
