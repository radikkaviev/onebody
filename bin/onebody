#!/usr/bin/env ruby

require 'fileutils'
$LOAD_PATH.unshift(File.expand_path(File.join(File.dirname(__FILE__), '../vendor')))
$LOAD_PATH.unshift(File.expand_path(File.join(File.dirname(__FILE__), '../lib')))
require 'highline/import'


if ARGV[0]
  
  directory = File.expand_path(ARGV[0])
  
  if NEW_INSTALL = !File.exists?(directory)
    puts "Creating a new instance of OneBody at #{directory}"
    FileUtils.mkdir(directory) # this will fail if directory already exists, thus no existing files will be overwritten
  else
    puts "Upgrading your instance of OneBody at #{directory}"
    exit unless agree('This operation will overwrite files. Are you sure? ')
  end

  # copy files
  begin
    # copy main files from gem
    files = Dir[File.dirname(File.dirname(__FILE__)) + "/*"]
    files.each_with_index do |file, index|
      next if file =~ /config|bin$/
      FileUtils.cp_r(file, directory, :remove_destination => true)
      print "#{index+1} of #{files.length} copied\r"
    end
    # create and copy config directory (except database.yml)
    FileUtils.mkdir(File.join(directory, 'config')) unless File.exists? File.join(directory, 'config')
    Dir[File.dirname(File.dirname(__FILE__)) + "/config/*"].each do |file|
      next if file.include? 'database.yml'
      FileUtils.cp_r(file, File.join(directory, 'config'), :remove_destination => true)
    end
    # create log directory
    FileUtils.mkdir(File.join(directory, 'log')) unless File.exists? File.join(directory, 'log')
    # indicate install method
    File.open(File.join(directory, 'installed-from-gem'), 'w') { |f| f.write 'This instance of OneBody was installed via RubyGems.' }
    puts
  rescue => e
    puts "There was an error copying files: #{e}"
    exit(1)
  end
  
  puts "Done copying files.\n\n"
  
  # create the database config file if it doesn't exist yet
  if NEW_INSTALL
    config = "production:\n  adapter: sqlite3\n  database: db/onebody.db\ndevelopment:\n  production"
    File.open(File.join(directory, 'config/database.yml'), 'w') { |f| f.write config }
    puts
  end  
  
  puts 'Now, cd to your instance directory and run the following command:'
  puts 'ruby script/server -e setup # then browse to http://localhost:3000'
  
else
  
  puts 'OneBody instance creation script. Run this to create a new instance'
  puts 'or to update an existing one (will overwrite files, so make a backup).'
  puts
  puts 'Usage:'
  puts 'onebody /path/to/instance'
  puts 'cd /path/to/instance'
  puts 'ruby script/server -e setup # then browse to http://localhost:3000'
  
end