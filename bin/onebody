#!/usr/bin/env ruby

require 'fileutils'
$LOAD_PATH.unshift(File.expand_path(File.join(File.dirname(__FILE__), '../vendor')))
$LOAD_PATH.unshift(File.expand_path(File.join(File.dirname(__FILE__), '../lib')))
require 'highline/import'


if ARGV[0]
  
  directory = File.expand_path(ARGV[0])
  
  if NEW_INSTALL = !File.exists?(directory)
    puts "Creating a new instance of OneBody at #{directory}"
    FileUtils.mkdir(directory) # this will fail if directory already exists, thus no existing files will be overwritten
  else
    puts "Upgrading your instance of OneBody at #{directory}"
    exit unless agree('This operation will overwrite files. Are you sure? ')
  end

  # copy files
  begin
    # copy main files from gem
    files = Dir[File.dirname(File.dirname(__FILE__)) + "/*"]
    files.each_with_index do |file, index|
      next if file =~ /config|bin$/
      FileUtils.cp_r(file, directory, :remove_destination => true)
      print "#{index+1} of #{files.length} copied\r"
    end
    # create and copy config directory (except database.yml)
    FileUtils.mkdir(File.join(directory, 'config')) unless File.exists? File.join(directory, 'config')
    Dir[File.dirname(File.dirname(__FILE__)) + "/config/*"].each do |file|
      next if file.include? 'database.yml'
      FileUtils.cp_r(file, File.join(directory, 'config'), :remove_destination => true)
    end
    # remove pesky .svn directories
    Dir[File.join(directory, '**', '.svn')].each { |d| FileUtils.rm_rf(d) }
    # set to production mode
    env_file = File.read(env_filename = File.join(directory, 'config/environment.rb'))
    File.open(env_filename, 'w') { |f| f.write "ENV['RAILS_ENV'] ||= 'production'\n\n" + env_file }
    puts
  rescue => e
    puts "There was an error copying files: #{e}"
    exit(1)
  end
  
  puts "Done copying files.\n\n"
  
  # create the database config file if it doesn't exist yet
  if NEW_INSTALL
    puts 'Setting up the database configuration...'
    begin
      db_adapter = ask('Choose your database (sqlite3 or mysql) [sqlite3]: ')
      db_adapter = 'sqlite3' unless db_adapter.any?
    end while not %w(sqlite3 mysql).include? db_adapter
    case db_adapter
    when 'sqlite3'
      config = "production:\n  adapter: sqlite3\n  database: db/onebody.db\ndevelopment:\n  production"
    when 'mysql'
      puts 'Enter the MySQL username and password.'
      db_user = ask('Username [root]: ')
      db_user = 'root' unless db_user.any?
      db_pass = ask('Password [blank]: ') { |q| q.echo = false }
      db_name = ask('Database name [onebody]: ')
      db_name = 'onebody' unless db_name.any?
      config = "production:\n  adapter: mysql\n  database: #{db_name}\n  username: #{db_user}\n  password: #{db_pass}\ndevelopment:\n  production"
    end
    File.open(File.join(directory, 'config/database.yml'), 'w') { |f| f.write config }
    puts
  end  
  
  puts 'Now, cd to your instance directory and run the following command:'
  if NEW_INSTALL
    puts 'rake init'
  else
    puts 'rake update'
  end
  
else
  
  puts 'OneBody instance creation script. Run this to create a new instance'
  puts 'or to update an existing one (will overwrite files, so make a backup).'
  puts
  puts 'Usage: onebody /path/to/deploy'
  
end