#!/usr/bin/env ruby

require 'fileutils'
$LOAD_PATH.unshift(File.expand_path(File.join(File.dirname(__FILE__), '../vendor')))
$LOAD_PATH.unshift(File.expand_path(File.join(File.dirname(__FILE__), '../lib')))
require 'highline/import'


if ARGV[0]
  
  directory = File.expand_path(ARGV[0])
  
  if NEW_INSTALL = !File.exists?(directory)
    puts "Creating a new instance of OneBody at #{directory}"
    FileUtils.mkdir(directory)
  else
    puts "Upgrading your instance of OneBody at #{directory}"
  end

  # copy files
  %w(deploy/config deploy/lib deploy/log deploy/script deploy/Rakefile public themes).each do |dir|
    begin
      FileUtils.cp_r(File.join(File.dirname(__FILE__), "../#{dir}"), directory, :remove_destination => true)
    rescue => e
      puts "There was an error copying files: #{e}"
      exit(1)
    end
  end
  
  # build the db directories
  FileUtils.mkdir_p(File.join(directory, 'db/photos'))
  %w(families groups people pictures recipes).each do |dir|
    FileUtils.mkdir_p(File.join(directory, 'db/photos', dir))
  end
  FileUtils.mkdir_p(File.join(directory, 'db/publications'))
  
  # copy and tweak some Rails files
  [ # orig, dest, hash_of_gsub_changes
  
    [ File.join(File.dirname(__FILE__), '../vendor/rails/railties/lib/commands/console.rb'),
      File.join(directory, 'lib/commands/console.rb'),
      {/#\{RAILS_ROOT\}\/config\/environment/ => '#{APP_ROOT}/config/environment'} ],
      
    [ File.join(File.dirname(__FILE__), '../vendor/rails/railties/lib/commands/servers/webrick.rb'),
      File.join(directory, 'lib/commands/servers/webrick.rb'),
      {/require RAILS_ROOT \+ "\/config\/environment"/ => 'require APP_ROOT + "/config/environment"'} ]
      
  ].each do |orig, dest, changes|
    src = File.read(orig)
    changes.each { |from, to| src.gsub!(from, to) }
    File.open(dest, 'w') { |f| f.write src }
  end
  
  puts "Done copying files.\n\n"
  
  # create the database config file if it doesn't exist yet
  unless File.exists? File.join(directory, "config/database.yml")
    puts 'Setting up the database configuration...'
    begin
      db_adapter = ask('Choose your database (sqlite3 or mysql) [sqlite3]: ')
      db_adapter = 'sqlite3' unless db_adapter.any?
    end while not %w(sqlite3 mysql).include? db_adapter
    case db_adapter
    when 'sqlite3'
      config = "production:\n  adapter: sqlite3\n  database: <%= APP_ROOT %>/db/onebody.db"
    when 'mysql'
      puts 'Enter the MySQL username and password.'
      db_user = ask('Username [root]: ')
      db_user = 'root' unless db_user.any?
      db_pass = ask('Password [blank]: ') { |q| q.echo = false }
      db_name = ask('Database name [onebody]: ')
      db_name = 'onebody' unless db_name.any?
      config = "production:\n  adapter: mysql\n  database: #{db_name}\n  username: #{db_user}\n  password: #{db_pass}"
    end
    File.open(File.join(directory, 'config/database.yml'), 'w') { |f| f.write config }
    puts
  end  
  
  puts 'Now, cd to your instance directory and run the following command:'
  if NEW_INSTALL
    puts 'rake init'
  else
    puts 'rake update'
  end
  
else
  
  puts 'OneBody instance creation script. Run this to create a new instance'
  puts 'or to update an existing one (will overwrite files, so make a backup).'
  puts
  puts 'Usage: onebody /path/to/deploy'
  
end