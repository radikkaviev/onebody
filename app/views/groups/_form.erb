<%= form_for @group, html: {multipart: true, style: 'border:none;padding:0;'} do |form| %>

  <%= error_messages_for(form) %>

  <h3><%= t('groups.details') %></h3>
  <div class="spaced-labels">
    <%= form.label :name, t('groups.name_required') %>
    <%= form.text_field :name, onkeyup: 'update_address(this.value)' %><br/>

    <%= form.label :category, t('groups.category_required') %>
    <div class="form-field-hint"><%= t('groups.category_hint') %></div>
    <%= form.select :category, [''] + @categories + [['[new category]', '!']], {} ,{onChange: "if(this.value=='!') custom_select_val(this, 'Enter the new category.')"} %><br/>

    <%= form.label :description, t('groups.description') %>
    <div class="form-field-hint"><%= t('groups.description_hint') %></div>
    <%= form.text_area :description, rows: 3 %><br/>

    <%= form.label :other_notes, t('groups.other_notes') %>
    <%= form.text_area :other_notes, rows: 3 %><br/>

    <% unless @group.new_record? %>
      <%= form.label :leader_id, t('groups.leader_id') %>
      <%= form.select :leader_id, [['(none)',nil]]+@members.map { |m| [m.name, m.id] } %><br/>
    <% end %>

    <%= form.label :creator, t('groups.creator') %>
    <%= form.text_field :creator, value: (@group.creator ? @group.creator.name : nil), readonly: true, name: 'creator_name' %><br/>
  </div>

  <h3><%= t('groups.meets') %></h3>
  <div class="spaced-labels">
    <%= form.label :meets, t('groups.meets_when') %>
    <div class="form-field-hint"><%= t('groups.meets_when_hint') %></div>
    <%= form.text_field :meets %><br/>

    <%= form.label :location, t('groups.location_address') %>
    <% if Setting.get(:services, :yahoo) %>
      <div class="form-field-hint"><%= t('groups.location_address_hint') %></div>
    <% end %>
    <%= form.text_area :location, rows: 3 %>
    <div id="map-preview"></div>
    <br/>

    <%= form.label :directions, t('groups.directions') %>
    <div class="form-field-hint"><%= t('groups.directions_hint') %></div>
    <%= form.text_area :directions, rows: 3 %>
  </div>

  <h3><%= t('groups.picture') %></h3>
  <div class="spaced-labels">
    <div class="form-field-hint"><%= t('groups.picture_hint') %></div>
    <%= render partial: 'photo' %>
    <%= form.file_field :photo %><br/>
    <% if !@group.new_record? and @group.photo.exists? %>
      <%= link_to t('groups.remove_group_photo'), group_path(@group, group: {photo: 'remove'}), method: 'put', data: { confirm: t('are_you_sure') } %>
      <br/>
    <% end %>
    <em><%= t('groups.click_save_changes_to_upload') %></em>
  </div>

  <h3><%= t('groups.features') %></h3>
  <div class="spaced-labels">
    <div class="form-field-hint"><%= t('groups.address_hint') %></div>
    <%= form.check_box :email, class: 'checkbox', onclick: 'toggleAddressField()' %>
    <%= form.label :email, t('groups.enable_email'), class: 'inline' %>

    <span id="group_address_field">
      <%= form.text_field :address, size: 15, onkeyup: "this.value = remove_symbols(this.value)" %>@<%= Site.current.host %>
    </span><br/>

    <%= form.check_box :prayer, class: 'checkbox' %> <%= form.label :prayer, t('groups.enable_prayer_requests'), class: 'inline' %><br/>

    <%= form.check_box :pictures, class: 'checkbox' %> <%= form.label :pictures, t('groups.enable_pictures'), class: 'inline' %><br/>

    <%= form.check_box :attendance, class: 'checkbox' %> <%= form.label :attendance, t('groups.enable_attendance_tracking'), class: 'inline' %><br/>

    <%= check_box_tag :calendar, nil, @group.gcal_private_link.to_s.any?, class: 'checkbox', onclick: 'toggleCalendarField()' %>
    <%= label_tag  :calendar, t('groups.enable_calendar'), class: 'inline' %><br/>

    <span id="group_calendar_field">
      <%= form.label :gcal_private_link, t('groups.calendar_private_link'), class: 'inline' %>
      <%= form.text_field :gcal_private_link, size: 50 %>
      <%= link_to_function t('help'), "alert('" + t('groups.calendar_help') + "')" %>
    </span>
  </div>

  <h3><%= t('groups.privacy_security') %></h3>
  <div class="spaced-labels">
    <%= form.check_box :approval_required_to_join, class: 'checkbox', onclick: "check_mutual_exclusion()" %>
    <%= form.label :approval_required_to_join, t('groups.approval_required_to_join'), class: 'inline' %><br/>
    <%= form.check_box :private, class: 'checkbox', onclick: "check_mutual_exclusion()" %>
    <%= form.label :private, t('groups.private_group'), class: 'inline' %>
    <em><%= t('groups.if_checked_message_only_to_members') %></em><br/>
    <%= form.check_box :members_send, class: 'checkbox' %>
    <%= form.label :members_send, t('groups.group_members_can_post'), class: 'inline' %>
  </div>

  <% unless @group.new_record? %>
    <h3><%= t('attachments.files') %></h3>
    <div class="spaced-labels">
      <table class="spaced">
        <% @group.attachments.order(:name).each do |attachment| %>
          <tr>
            <td><%= link_to attachment.name, get_attachment_path(attachment) %></td>
            <td><%= number_to_human_size(attachment.file.size) rescue 'file missing' %></td>
            <td><%= attachment.created_at.to_s(:date) %></td>
            <td><%= link_to t('delete'), attachment, method: :delete, data: { confirm: t('are_you_sure') } %></td>
          </tr>
        <% end %>
      </table>
      <% if @group.attachments.count == 0 %>
        <p><em><%= t('none') %></em></p>
      <% end %>
      <p><%= link_to t('attachments.upload_file'), new_group_attachment_path(@group) %></p>
    </div>
  <% end %>

  <% if @logged_in.admin?(:manage_groups) %>
    <p class="double-margin-top" id="advanced_section_link"><%= link_to_function t('groups.advanced') + ' Â»', "$('#advanced_section, #advanced_section_heading').show();$('#advanced_section_link').hide();" %></p>
    <h3 id="advanced_section_heading" style="display:none;"><%= t('groups.advanced') %></h3>
    <div id="advanced_section" style="display:none;">
      <div class="spaced-labels">
        <%= t('groups.the_settings_are_for_advanced_users') %><br/>
        <%= form.label :link_code, t('groups.class_link_code') %>
        <div class="form-field-hint"><%= t('groups.class_link_code_hint_html') %></div>
        <%= form.text_field :link_code %>

        <%= form.label :parents_of, t('groups.parents_of') %>
        <div class="form-field-hint"><%= t('groups.parents_of_hint') %></div>
        <%= form.select :parents_of, [['(' + t('none') + ')', '']] + (Group.where(hidden: false).order('name').to_a - [@group]).map { |g| [g.name, g.id] } %>
        <em></em>

        <%= form.label :hidden, t('groups.hidden_group') %>
        <%= form.check_box :hidden, class: 'checkbox' %>
        <%= form.label :hidden, 'Hide this group from non-admins.', class: 'inline' %>
      </div>
    </div>
  <% end %>

  <p class="double-margin-top"><%= form.submit t('save_changes') %></p>
<% end %>

<% if Setting.get(:services, :yahoo) %>
  <script type="text/javascript" src="http://api.maps.yahoo.com/ajaxymap?v=3.4&amp;appid=<%= Setting.get(:services, :yahoo) %>"></script>
<% end %>
<script type="text/javascript">
  function update_address(name) {
    var address = name.toLowerCase().match(/[a-z0-9]+/g).join('');
    $('#group_address').val(address);
  }
  function check_mutual_exclusion() {
    if(!$('#group_approval_required_to_join').attr('checked') && $('#group_private').attr('checked')) {
      alert('<%= t('groups.by_allow_anyone_to_join') %>');
    }
  }
  function createMapMarker(address) {
    var img = new YImage();
    img.src = '/images/map_marker.gif';
    img.size = new YSize(16, 28);
    return new YMarker(address, img);
  }
  map = null;
  function mapLocation() {
    <%= Setting.get(:services, :yahoo) ? nil : 'return;' %>
    var width = 350;
    var height = 150;
    if($('#group_location').val().match(/\s[A-Z]{2}\s+\d{5}/)) {
      var address = $('#group_location').val();
      if(map) {
        map.removeMarkersAll();
      } else {
        $('#map-preview').html('').css('width', width+'px').css('height', height+'px');
        map = new YMap('map-preview');
        map.addZoomLong();
        map.setMapType(YAHOO_MAP_REG);
        map.addTypeControl();
        map.disableKeyControls();
      }
      map.drawZoomAndCenter(address, 6);
      map.addOverlay(createMapMarker(address));
    } else {
      $('#map-preview').html(
        '<%= escape_javascript t('groups.unmapable_address') %>'
      ).css('width', 'auto').css('height', 'auto');
      map = null;
    }
  }
  function toggleAddressField() {
    if($('#group_email').attr('checked')) {
      $('#group_address_field').css('display', 'inline');
    } else {
      $('#group_address_field').css('display', 'none');
      $('#group_address').val('');
    }
  }
  function toggleCalendarField() {
    if($('#calendar').attr('checked')) {
      $('#group_calendar_field').css('display', 'inline');
    } else {
      $('#group_calendar_field').css('display', 'none');
    }
  }
  toggleAddressField();
  toggleCalendarField();
  observeFields(mapLocation, 2000, ['group_location']);
</script>
